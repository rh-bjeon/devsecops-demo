- name: Get cluster version
  k8s_info:
    api_version: config.openshift.io/v1
    kind: ClusterVersion
    name: version
  register: r_cluster_version

- name: Set ocp4_cluster_version fact
  set_fact:
    ocp4_cluster_version: "{{ r_cluster_version.resources[0].status.history[0].version }}"

- name: Print OpenShift version
  debug:
    msg: "{{ ocp4_cluster_version }}"

- name: Install GitOps Operator
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'subs-gitops.yml.j2') }}"

- name: Adapt to the openshift_cluster_version LESS than 4.9
  when: ocp4_cluster_version is version_compare('4.9', '<')
  block:

  - name: Wait for GitOps CRD to exist
    kubernetes.core.k8s_info:
      api_version: "apiextensions.k8s.io/v1beta1"
      kind: CustomResourceDefinition
      name: "{{ item }}"
    loop: "{{ gitops_expected_crds }}"
    register: crds
    until: crds.resources|length > 0
    retries: 30
    delay: 10

- name: Adapt to the openshift_cluster_version MORE than 4.9
  when: ocp4_cluster_version is version_compare('4.9', '>=')
  block:

  - name: Wait for GitOps CRD to exist
    kubernetes.core.k8s_info:
      api_version: "apiextensions.k8s.io/v1"
      kind: CustomResourceDefinition
      name: "{{ item }}"
    loop: "{{ gitops_expected_crds }}"
    register: crds
    until: crds.resources|length > 0
    retries: 30
    delay: 10

- name: Install OCP Pipelines Operator
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'subs-pipelines.yml.j2') }}"

- name: Adapt to the openshift_cluster_version LESS than 4.9
  when: ocp4_cluster_version is version_compare('4.9', '<')
  block:

  - name: Wait for Pipelines CRD to exist
    kubernetes.core.k8s_info:
      api_version: "apiextensions.k8s.io/v1beta1"
      kind: CustomResourceDefinition
      name: "{{ item }}"
    loop: "{{ pipelines_expected_crds }}"
    register: crds
    until: crds.resources|length > 0
    retries: 30
    delay: 10

- name: Adapt to the openshift_cluster_version MORE than 4.9
  when: ocp4_cluster_version is version_compare('4.9', '>=')
  block:

  - name: Wait for Pipelines CRD to exist
    kubernetes.core.k8s_info:
      api_version: "apiextensions.k8s.io/v1"
      kind: CustomResourceDefinition
      name: "{{ item }}"
    loop: "{{ pipelines_expected_crds }}"
    register: crds
    until: crds.resources|length > 0
    retries: 30
    delay: 10

- name: Add ClusterRoleBinding to the openshift-gitops-controller
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'gitops-rb.yml.j2') }}"

- name: Patch the CM of Openshift GitOps to add role admin by default
  command: oc patch cm/argocd-rbac-cm -n openshift-gitops --type=merge -p '{"data":{"policy.default":"role:admin"}}'
  retries: 30
  delay: 10

- name: Add SSO Keycloak in Openshift GitOps by default
  shell: |
    oc -n openshift-gitops patch argocd openshift-gitops --type='json' -p='[{"op": "add", "path": "/spec/sso", "value": {"provider": "keycloak"} }]'
  retries: 30
  delay: 10

- name: Get ArgoCD route
  kubernetes.core.k8s_info:
    kind: Route
    api_version: route.openshift.io/v1
    name: openshift-gitops-server
    namespace: openshift-gitops
  register: r_argo_route
  retries: 10
  delay: 20
  until:
    - r_argo_route.resources[0].spec.host is defined

- name: Get argocd password
  kubernetes.core.k8s_info:
    kind: Secret
    api_version: /v1
    name: openshift-gitops-cluster
    namespace: openshift-gitops
  register: r_argopass

#- name: debug
#  debug:
#    msg: "{{ r_argopass.resources[0].data['admin.password'] }}"

- name: Add CM for ArgoCD env
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'gitops-env-cm.yaml.j2') }}"

- name: Add Secrets for ArgoCD env
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'gitops-env-secret.yaml.j2') }}"
